<?xml version="1.0" encoding="GBK"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="jeeframework" version="3.0">
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>jeeframework.root</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:biz-context-core.xml;classpath:conf-spring/biz-context-*.xml
        </param-value>
    </context-param>
    <!-- log4j -->
    <context-param>
        <param-name>isLog4jAutoInitializationDisabled</param-name>
        <param-value>false</param-value>
    </context-param>
    <!-- 默认就会找这个文件，不需要额外配置引用
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:/log4j2.xml</param-value>
    </context-param>
   -->
    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>log4jServletFilter</filter-name>
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>log4jServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>


    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/dispatcher-servlet.xml</param-value>
        </init-param>
    </servlet>
    <!--
            applicationContext.xml文件代表示应用程序服务的配置和 bean 配置。如果想装入多个配置文件，可以在
            <param-value>标记中用逗号作分隔符。
            springmvc配置文件与spring配置的servlet名称有关[如本配置中是dd]
            通常springmvc配置文件名称结构为：[servlet-name]-servlet.xml，
            如果你没有指定init-param里面contextCofigLocation的值中对应的XML文件的话
            （也就是applicationContext全局配置文件没有配置在web.xml中的话）,那么像本
            段代码对应在springmvc中的配置文件就应该是/WEB-INF/dipatcher-servlet.xml这样的文件,
            否则如果配置了applicaitonContext.xml这样的spring全局配置文件，如本配置那么就必须为/WEB-INF/dd-servlet.xml
        -->


    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index.html</welcome-file>
    </welcome-file-list>

    <jsp-config>
        <taglib>
            <taglib-uri>http://www.jeeframework.com/tags-spring</taglib-uri>
            <taglib-location>/WEB-INF/tlds/spring.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>http://www.jeeframework.com/tags-jstl</taglib-uri>
            <taglib-location>/WEB-INF/tlds/c.tld</taglib-location>
        </taglib>
    </jsp-config>

</web-app>
